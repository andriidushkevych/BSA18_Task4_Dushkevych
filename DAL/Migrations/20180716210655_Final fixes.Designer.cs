// <auto-generated />
using System;
using DAL.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AirportContext))]
    [Migration("20180716210655_Final fixes")]
    partial class Finalfixes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Model.Crew", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("PilotId");

                    b.HasKey("Id");

                    b.HasIndex("PilotId");

                    b.ToTable("Crew");
                });

            modelBuilder.Entity("DAL.Model.Departure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CrewId");

                    b.Property<DateTime>("DepartTimeActual");

                    b.Property<DateTime>("DepartTimeAssigned");

                    b.Property<int>("FlightNumber");

                    b.Property<Guid?>("PlaneId");

                    b.HasKey("Id");

                    b.HasIndex("CrewId");

                    b.HasIndex("PlaneId");

                    b.ToTable("Departure");
                });

            modelBuilder.Entity("DAL.Model.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ArrivalTimeActual");

                    b.Property<DateTime>("ArrivalTimeAssigned");

                    b.Property<DateTime>("DepartTimeActual");

                    b.Property<DateTime>("DepartTimeAssigned");

                    b.Property<string>("Destination");

                    b.Property<int>("Number");

                    b.Property<string>("Origin");

                    b.HasKey("Id");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("DAL.Model.Pilot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("FirstName");

                    b.Property<int>("FullYearsExperience");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Pilot");
                });

            modelBuilder.Entity("DAL.Model.Plane", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LifeTimeDate");

                    b.Property<DateTime>("ManufactureDate");

                    b.Property<string>("Name");

                    b.Property<Guid?>("PlaneTypeId");

                    b.Property<TimeSpan>("Timespan");

                    b.HasKey("Id");

                    b.HasIndex("PlaneTypeId");

                    b.ToTable("Plane");
                });

            modelBuilder.Entity("DAL.Model.PlaneType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Capacity");

                    b.Property<int>("CargoKg");

                    b.Property<string>("Model");

                    b.HasKey("Id");

                    b.ToTable("PlaneType");
                });

            modelBuilder.Entity("DAL.Model.Stewardess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<Guid?>("CrewId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.HasIndex("CrewId");

                    b.ToTable("Stewardess");
                });

            modelBuilder.Entity("DAL.Model.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("FlightId");

                    b.Property<int>("FlightNumber");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("DAL.Model.Crew", b =>
                {
                    b.HasOne("DAL.Model.Pilot", "Pilot")
                        .WithMany()
                        .HasForeignKey("PilotId");
                });

            modelBuilder.Entity("DAL.Model.Departure", b =>
                {
                    b.HasOne("DAL.Model.Crew", "Crew")
                        .WithMany()
                        .HasForeignKey("CrewId");

                    b.HasOne("DAL.Model.Plane", "Plane")
                        .WithMany()
                        .HasForeignKey("PlaneId");
                });

            modelBuilder.Entity("DAL.Model.Plane", b =>
                {
                    b.HasOne("DAL.Model.PlaneType", "PlaneType")
                        .WithMany()
                        .HasForeignKey("PlaneTypeId");
                });

            modelBuilder.Entity("DAL.Model.Stewardess", b =>
                {
                    b.HasOne("DAL.Model.Crew")
                        .WithMany("Stewardesses")
                        .HasForeignKey("CrewId");
                });

            modelBuilder.Entity("DAL.Model.Ticket", b =>
                {
                    b.HasOne("DAL.Model.Flight")
                        .WithMany("Tickets")
                        .HasForeignKey("FlightId");
                });
#pragma warning restore 612, 618
        }
    }
}
